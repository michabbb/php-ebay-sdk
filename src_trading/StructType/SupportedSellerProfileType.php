<?php

declare(strict_types=1);

namespace macropage\ebaysdk\trading\StructType;

use InvalidArgumentException;
use WsdlToPhp\PackageBase\AbstractStructBase;

/**
 * This class stands for SupportedSellerProfileType StructType
 * Meta information extracted from the WSDL
 * - documentation: Type defining the <b>SupportedSellerProfile</b> container, which contains summary information related to specific Business Policies payment, return policy, and shipping profiles. The profile type is found in the <b>ProfileType</b>
 * field.
 * @subpackage Structs
 */
class SupportedSellerProfileType extends AbstractStructBase
{
    /**
     * The ProfileID
     * Meta information extracted from the WSDL
     * - documentation: Unique identifier of a Business Policies profile. This identifier is auto-generated by eBay when the seller creates the profile. This field is always returned with the <b>SupportedSellerProfile</b> container.
     * - minOccurs: 0
     * @var int|null
     */
    protected ?int $ProfileID = null;
    /**
     * The ProfileType
     * Meta information extracted from the WSDL
     * - documentation: Indicates the type of the Business Policies profile. Valid values are PAYMENT, RETURN_POLICY, and SHIPPING. This field is always returned with the <b>SupportedSellerProfile</b> container.
     * - minOccurs: 0
     * @var string|null
     */
    protected ?string $ProfileType = null;
    /**
     * The ProfileName
     * Meta information extracted from the WSDL
     * - documentation: The seller-defined name for a Business Policies profile. This field is always returned with the <b>SupportedSellerProfile</b> container.
     * - minOccurs: 0
     * @var string|null
     */
    protected ?string $ProfileName = null;
    /**
     * The ShortSummary
     * Meta information extracted from the WSDL
     * - documentation: Seller-provided description of a Business Policies profile. This field is only returned if a seller has provided a description for the profile.
     * - minOccurs: 0
     * @var string|null
     */
    protected ?string $ShortSummary = null;
    /**
     * The CategoryGroup
     * Meta information extracted from the WSDL
     * - documentation: Identifies the the Business Policies category group associated with the Business Policies profile. Current values are ALL (referring to all non-motor vehicle categories) and MOTORS_VEHICLE (for motor vehicle listings).
     * - minOccurs: 0
     * @var \macropage\ebaysdk\trading\StructType\CategoryGroupType|null
     */
    protected ?\macropage\ebaysdk\trading\StructType\CategoryGroupType $CategoryGroup = null;
    /**
     * Constructor method for SupportedSellerProfileType
     * @uses SupportedSellerProfileType::setProfileID()
     * @uses SupportedSellerProfileType::setProfileType()
     * @uses SupportedSellerProfileType::setProfileName()
     * @uses SupportedSellerProfileType::setShortSummary()
     * @uses SupportedSellerProfileType::setCategoryGroup()
     * @param int $profileID
     * @param string $profileType
     * @param string $profileName
     * @param string $shortSummary
     * @param \macropage\ebaysdk\trading\StructType\CategoryGroupType $categoryGroup
     */
    public function __construct(?int $profileID = null, ?string $profileType = null, ?string $profileName = null, ?string $shortSummary = null, ?\macropage\ebaysdk\trading\StructType\CategoryGroupType $categoryGroup = null)
    {
        $this
            ->setProfileID($profileID)
            ->setProfileType($profileType)
            ->setProfileName($profileName)
            ->setShortSummary($shortSummary)
            ->setCategoryGroup($categoryGroup);
    }
    /**
     * Get ProfileID value
     * @return int|null
     */
    public function getProfileID(): ?int
    {
        return $this->ProfileID;
    }
    /**
     * Set ProfileID value
     * @param int $profileID
     * @return \macropage\ebaysdk\trading\StructType\SupportedSellerProfileType
     */
    public function setProfileID(?int $profileID = null): self
    {
        // validation for constraint: int
        if (!is_null($profileID) && !(is_int($profileID) || ctype_digit($profileID))) {
            throw new InvalidArgumentException(sprintf('Invalid value %s, please provide an integer value, %s given', var_export($profileID, true), gettype($profileID)), __LINE__);
        }
        $this->ProfileID = $profileID;
        
        return $this;
    }
    /**
     * Get ProfileType value
     * @return string|null
     */
    public function getProfileType(): ?string
    {
        return $this->ProfileType;
    }
    /**
     * Set ProfileType value
     * @param string $profileType
     * @return \macropage\ebaysdk\trading\StructType\SupportedSellerProfileType
     */
    public function setProfileType(?string $profileType = null): self
    {
        // validation for constraint: string
        if (!is_null($profileType) && !is_string($profileType)) {
            throw new InvalidArgumentException(sprintf('Invalid value %s, please provide a string, %s given', var_export($profileType, true), gettype($profileType)), __LINE__);
        }
        $this->ProfileType = $profileType;
        
        return $this;
    }
    /**
     * Get ProfileName value
     * @return string|null
     */
    public function getProfileName(): ?string
    {
        return $this->ProfileName;
    }
    /**
     * Set ProfileName value
     * @param string $profileName
     * @return \macropage\ebaysdk\trading\StructType\SupportedSellerProfileType
     */
    public function setProfileName(?string $profileName = null): self
    {
        // validation for constraint: string
        if (!is_null($profileName) && !is_string($profileName)) {
            throw new InvalidArgumentException(sprintf('Invalid value %s, please provide a string, %s given', var_export($profileName, true), gettype($profileName)), __LINE__);
        }
        $this->ProfileName = $profileName;
        
        return $this;
    }
    /**
     * Get ShortSummary value
     * @return string|null
     */
    public function getShortSummary(): ?string
    {
        return $this->ShortSummary;
    }
    /**
     * Set ShortSummary value
     * @param string $shortSummary
     * @return \macropage\ebaysdk\trading\StructType\SupportedSellerProfileType
     */
    public function setShortSummary(?string $shortSummary = null): self
    {
        // validation for constraint: string
        if (!is_null($shortSummary) && !is_string($shortSummary)) {
            throw new InvalidArgumentException(sprintf('Invalid value %s, please provide a string, %s given', var_export($shortSummary, true), gettype($shortSummary)), __LINE__);
        }
        $this->ShortSummary = $shortSummary;
        
        return $this;
    }
    /**
     * Get CategoryGroup value
     * @return \macropage\ebaysdk\trading\StructType\CategoryGroupType|null
     */
    public function getCategoryGroup(): ?\macropage\ebaysdk\trading\StructType\CategoryGroupType
    {
        return $this->CategoryGroup;
    }
    /**
     * Set CategoryGroup value
     * @param \macropage\ebaysdk\trading\StructType\CategoryGroupType $categoryGroup
     * @return \macropage\ebaysdk\trading\StructType\SupportedSellerProfileType
     */
    public function setCategoryGroup(?\macropage\ebaysdk\trading\StructType\CategoryGroupType $categoryGroup = null): self
    {
        $this->CategoryGroup = $categoryGroup;
        
        return $this;
    }
}
